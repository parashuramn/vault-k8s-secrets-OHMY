---
apiVersion: v1
kind: ConfigMap
metadata:
  name: secrets-reader-configmap
data:
  entrypoint.sh: |-
    #!/bin/bash
    yum install -y curl wget epel-release
    yum install -y jq
    export VAULT_TOKEN=$(curl -sk -XPOST -d "{\"jwt\": \"$(cat /var/run/secrets/kubernetes.io/serviceaccount/token)\", \"role\": \"demo-role\"}" ${VAULT_ADDR}/v1/auth/kubernetes/login | jq -r '.auth.client_token')
    curl -s -H "X-Vault-Token: ${VAULT_TOKEN}" ${VAULT_ADDR}/v1/kv/data/ct_key | jq -r '.data.data.key' | base64 -d > /tmp/whatever/our-key.pem
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: secrets-reader-deployment
  labels:
    app: secrets-reader
spec:
  replicas: 1
  selector:
    matchLabels:
      app: secrets-reader
  template:
    metadata:
      labels:
        app: secrets-reader
    spec:
      serviceAccount: phil

      volumes:
        - name: workdir
          emptyDir: {}
        - name: configmap-reader-volume
          configMap:
            defaultMode: 0700
            name: secrets-reader-configmap

      initContainers:
        - name: init-reader
          image: pgporada/vault
          command:
            - /bin/entrypoint.sh
          env:
            - name: VAULT_ADDR
              value: "http://192.168.1.142:8200"
          volumeMounts:
            - name: workdir
              mountPath: "/tmp/whatever"
            - name: configmap-reader-volume
              mountPath: /bin/entrypoint.sh
              readOnly: true
              subPath: entrypoint.sh

      containers:
        - name: reader
          image: centos
          command: ['sh', '-c', 'echo The app is running! && sleep 3600']
          env:
            - name: VAULT_ADDR
              value: "http://192.168.1.142:8200"
          volumeMounts:
            - name: workdir
              mountPath: /tmp/whatever
...
